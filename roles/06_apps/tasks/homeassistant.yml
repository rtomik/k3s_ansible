---
- name: Deploy home-assistant
  when: deploy_homeassistant | bool
  block:
    - name: Check if Home Assistant is already installed
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: home-assistant
        namespace: home-assistant
      register: homeassistant_check
      ignore_errors: true

    - name: Fetch Home Assistant Helm chart information
      kubernetes.core.helm_info:
        name: home-assistant
        release_namespace: homeassistant
      register: homeassistant_helm_info
      ignore_errors: true

    - name: Deploy or upgrade Home Assistant
      kubernetes.core.helm:
        name: home-assistant
        chart_ref: pajikos/home-assistant
        release_namespace: home-assistant
        create_namespace: true
        values: "{{ lookup('template', 'values-homeassistant.yml.j2') | from_yaml }}"
        wait: true
        wait_timeout: 5m
      register: homeassistant_deploy

- name: Deploy Multus CNI
  when: deploy_homeassistant | bool
  block:
    - name: Check if NetworkAttachmentDefinition CRD exists
      kubernetes.core.k8s_info:
        api_version: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        name: network-attachment-definitions.k8s.cni.cncf.io
      register: nad_crd

    - name: Label existing NetworkAttachmentDefinition CRD with Helm ownership
      kubernetes.core.k8s:
        definition:
          apiVersion: apiextensions.k8s.io/v1
          kind: CustomResourceDefinition
          metadata:
            name: network-attachment-definitions.k8s.cni.cncf.io
            labels:
              app.kubernetes.io/managed-by: Helm
            annotations:
              meta.helm.sh/release-name: multus
              meta.helm.sh/release-namespace: kube-system
      when: nad_crd.resources | length > 0

    - name: Deploy Multus using kubectl apply
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: helm.cattle.io/v1
          kind: HelmChart
          metadata:
            name: multus
            namespace: kube-system
          spec:
            repo: https://rke2-charts.rancher.io
            chart: rke2-multus
            targetNamespace: kube-system
            valuesContent: |-
              config:
                fullnameOverride: multus
                cni_conf:
                  confDir: /var/lib/rancher/k3s/agent/etc/cni/net.d
                  binDir: /var/lib/rancher/k3s/data/cni/
                  kubeconfig: /var/lib/rancher/k3s/agent/etc/cni/net.d/multus.d/multus.kubeconfig
              rke2-whereabouts:
                fullnameOverride: whereabouts
                enabled: true
                cniConf:
                  confDir: /var/lib/rancher/k3s/agent/etc/cni/net.d
                  binDir: /var/lib/rancher/k3s/data/cni/

    - name: Create MacVLAN NetworkAttachmentDefinition
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: k8s.cni.cncf.io/v1
          kind: NetworkAttachmentDefinition
          metadata:
            name: iot
            namespace: kube-system
          spec:
            config: |-
              {
                "cniVersion": "0.3.0",
                "type": "macvlan",
                "master": "wlp1s0",
                "mode": "bridge",
                "ipam": {
                  "type": "whereabouts",
                  "range": "192.168.1.0/24",
                  "gateway": "192.168.1.1",
                  "configuration_path": "/var/lib/rancher/k3s/agent/etc/cni/net.d/whereabouts.d/whereabouts.conf"
                }
              }
      register: nad_result
