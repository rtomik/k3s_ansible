# Install Docker

- name: Download Docker installation script
  get_url:
    url: https://get.docker.com
    dest: /tmp/get-docker.sh
    mode: '0755'

- name: Execute Docker installation script
  command: sh /tmp/get-docker.sh
  args:
    creates: /usr/bin/docker

- name: Ensure Docker service is running
  systemd:
    name: docker
    state: started
    enabled: yes

# Install Docker compose

- name: Determine system architecture
  ansible.builtin.command: uname -m
  register: architecture
  changed_when: false

- name: Set Docker Compose download URL based on architecture
  ansible.builtin.set_fact:
    docker_compose_url: >-
      https://github.com/docker/compose/releases/download/v2.32.1/docker-compose-linux-{{ 
        'aarch64' if architecture.stdout == 'aarch64'
        else 'armv7' if architecture.stdout == 'armv7l'
        else 'x86_64' if architecture.stdout == 'x86_64'
        else 'amd64' if architecture.stdout == 'amd64'
        else architecture.stdout
      }}

- name: Download and install Docker Compose
  ansible.builtin.get_url:
    url: "{{ docker_compose_url }}"
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  register: docker_compose_download

- name: Display Docker Compose version
  ansible.builtin.command: docker-compose --version
  register: docker_compose_version
  changed_when: false
  when: docker_compose_download.changed

- name: Show Docker Compose version
  ansible.builtin.debug:
    var: docker_compose_version.stdout
  when: docker_compose_version.changed

- name: Create a network
  docker_network:
    name: web

- name: Add user to docker group
  user:
    name: "{{ user }}"
    groups: docker
    append: yes

- name: Install required Python packages
  apt:
    name:
      - python3-docker
    state: present
    update_cache: yes
