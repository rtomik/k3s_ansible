---
- name: Check if Authentik is already installed
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: authentik-server
    namespace: authentik
  register: authentik_check
  ignore_errors: true
  when: deploy_authentik | bool

- name: Fetch Authentik Helm chart information
  kubernetes.core.helm_info:
    name: authentik
    release_namespace: authentik
  register: authentik_helm_info
  ignore_errors: true
  when: deploy_authentik | bool

- name: Deploy or upgrade Authentik
  kubernetes.core.helm:
    name: authentik
    chart_ref: authentik/authentik
    chart_version: "{{ authentik_version }}"
    release_namespace: authentik
    create_namespace: yes
    values:
      authentik:
        secret_key: "{{ vault_authentik_secret_key }}"
        postgresql:
          password: "{{ vault_authentik_postgresql_password }}"
        ingress:
          enabled: false
        server:
          ingress:
            enabled: false
          ports:
            http:
              port: 80
              targetPort: 9000
            https:
              port: 443
              targetPort: 9443
      postgresql:
        enabled: true
        auth:
          password: "{{ vault_authentik_postgresql_password }}"
      redis:
        enabled: true
    wait: yes
    wait_timeout: 10m
  register: authentik_deploy
  when: deploy_authentik | bool

- name: Create Authentik Ingress
  kubernetes.core.k8s:
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: authentik
        namespace: authentik
        annotations:
          kubernetes.io/ingress.class: traefik
          traefik.ingress.kubernetes.io/router.tls.certresolver: le
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: authentik-authentik-outpost@kubernetescrd
      spec:
        rules:
          - host: "auth.{{ domain }}"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: authentik-server
                      port:
                        number: 443
        tls:
          - hosts:
              - "auth.{{ domain }}"
            secretName: authentik-tls
  when: authentik_deploy is changed and deploy_authentik | bool

- name: Verify Authentik Ingress
  kubernetes.core.k8s_info:
    kind: Ingress
    name: authentik
    namespace: authentik
  register: authentik_ingress
  failed_when: authentik_ingress.resources | length == 0
  when: deploy_authentik | bool